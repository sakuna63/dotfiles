[alias]
  a = add
  aa = add -A .
  ap = add -p

  br = branch
  brm = branch -m
  bra = branch -a

  c = checkout
  cb = checkout -b

  cm = commit -v
  cma = commit --amend -v
  cmf = "!r() { git commit --fixup=HEAD~$1; }; r"
  cmfa = "!r() { git commit --amend --fixup=HEAD~$1; }; r"

  f = fetch

  mg = merge --no-ff

  p = pull
  pu = push origin

  re = "!r() { git reset HEAD~$1; }; r"
  rea = "!r() { git reset HEAD@{$1}; }; r"
  reh = "!r() { git reset --hard HEAD~$1; }; r"
  reha = "!r() { git reset --hard HEAD@{$1}; }; r"

  ri = "!r() { git rebase -i HEAD~$1; }; r"
  rc = rebase --continue
  ra = rebase --abort

  remotes = remote -v

  s = status
  ss = stash save
  ssh = "!r() { git stash show -p stash@{$1}; }; r"
  sp = "!r() { git stash pop stash@{$1}; }; r"
  sa = "!r() { git stash apply stash@{$1}; }; r"
  sl = stash list

  # Remove branches that have already been merged with master
  # a.k.a. ‘delete merged’
  dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

  n = now --all --stat

  ignore = !"f() { local s=$1; shift; \
    while [ $# -gt 0 ]; do s=\"$s,$1\"; shift; done;\
    curl \"https://www.gitignore.io/api/$s\"; }; f"

[apply]

  # Detect whitespace errors when applying a patch
  whitespace = fix

[core]
  editor = $EDITOR
  pager = less

  excludesfile = ~/.gitignore_global
  attributesfile = ~/.gitattributes

  # Treat spaces before tabs and all kinds of trailing whitespace as an error
  # [default] trailing-space: looks for spaces at the end of a line
  # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
  whitespace = space-before-tab,-indent-with-non-tab,trailing-space

  # Make `git rebase` safer on OS X
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false

  # Prevent showing files whose names contain non-ASCII symbols as unversioned.
  # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
  precomposeunicode = false

[user]
  name = Ippei Nawate
  email = 2648453+sakuna63@users.noreply.github.com

[color]

  # Use colors in Git commands that are capable of colored output when
  # outputting to the terminal. (This is the default setting in Git ≥ 1.8.4.)
  ui = auto

[color "branch"]

  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]

  meta = yellow bold
  frag = magenta bold # line info
  old = red # deletions
  new = green # additions

[color "status"]

  added = yellow
  changed = green
  untracked = cyan

[diff]

  # Detect copies as well as renames
  renames = copies

[help]

  # Automatically correct and execute mistyped commands
  autocorrect = 1

[merge]

  # Include summaries of merged commits in newly created merge commit messages
  log = true

[push]

  default = simple

# URL shorthands

[url "git@github.com:"]

  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"

[url "git://github.com/"]

  insteadOf = "github:"

[url "git@gist.github.com:"]

  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]

  insteadOf = "gist:"

[ghq]
  root = ~/.ghq
  root = $GOPATH/src

[credential]
  helper = $GIT_CREDENTIAL_HELPER
[rebase]
	autosquash = true
[filter "lfs"]
	required = true
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
